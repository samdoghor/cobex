"""feat: development of all basic models

Revision ID: 8dc2167e2a1b
Revises: 
Create Date: 2024-09-02 14:10:17.907534

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8dc2167e2a1b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organisations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('date_of_establishment', sa.DateTime(), nullable=False),
    sa.Column('country', sa.String(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('postal_code', sa.String(), nullable=False),
    sa.Column('is_hq', sa.Boolean(), nullable=False),
    sa.Column('hq_id', sa.UUID(), nullable=True),
    sa.Column('is_incorporated', sa.Boolean(), nullable=False),
    sa.Column('date_of_incorporation', sa.DateTime(), nullable=True),
    sa.Column('legal_name', sa.String(), nullable=True),
    sa.Column('logo', sa.String(), nullable=True),
    sa.Column('logo_id', sa.String(), nullable=True),
    sa.Column('banner', sa.String(), nullable=True),
    sa.Column('banner_id', sa.String(), nullable=True),
    sa.Column('slogan', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('website', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('verified', sa.Boolean(), nullable=False),
    sa.Column('can_loan', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('events',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('image', sa.String(), nullable=True),
    sa.Column('image_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('organisation', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['organisation'], ['organisations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('organisation_socials',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('link', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('organisation', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['organisation'], ['organisations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('link')
    )
    op.create_table('organisational_accounts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('bank_name', sa.String(), nullable=False),
    sa.Column('bank_code', sa.String(), nullable=False),
    sa.Column('account_name', sa.String(), nullable=False),
    sa.Column('account_number', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('organisation', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['organisation'], ['organisations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('organisational_levies',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('levy_name', sa.String(), nullable=False),
    sa.Column('interval', sa.String(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('organisation', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['organisation'], ['organisations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('organisational_roles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('is_top_role', sa.Boolean(), nullable=False),
    sa.Column('is_member_role', sa.Boolean(), nullable=False),
    sa.Column('role_position', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('organisation', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['organisation'], ['organisations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('members',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('middle_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('date_of_birth', sa.DateTime(), nullable=False),
    sa.Column('employment_status', sa.String(), nullable=False),
    sa.Column('occupation', sa.String(), nullable=False),
    sa.Column('marital_status', sa.String(), nullable=False),
    sa.Column('country', sa.String(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('postal_code', sa.String(), nullable=False),
    sa.Column('image', sa.String(), nullable=True),
    sa.Column('image_id', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('membership_status', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('organisational_role', sa.UUID(), nullable=False),
    sa.Column('organisation', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['organisation'], ['organisations.id'], ),
    sa.ForeignKeyConstraint(['organisational_role'], ['organisational_roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('phone'),
    sa.UniqueConstraint('username')
    )
    op.create_table('levy_payments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('reference', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('levy', sa.UUID(), nullable=False),
    sa.Column('member', sa.UUID(), nullable=False),
    sa.Column('organisation', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['levy'], ['organisational_levies.id'], ),
    sa.ForeignKeyConstraint(['member'], ['members.id'], ),
    sa.ForeignKeyConstraint(['organisation'], ['organisations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('loans',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('amount', sa.String(), nullable=False),
    sa.Column('due_date', sa.DateTime(), nullable=False),
    sa.Column('interest_at', sa.Text(), nullable=False),
    sa.Column('image', sa.String(), nullable=True),
    sa.Column('image_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('organisation', sa.UUID(), nullable=False),
    sa.Column('member', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['member'], ['members.id'], ),
    sa.ForeignKeyConstraint(['organisation'], ['organisations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('member_socials',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('link', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('member', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['member'], ['members.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('link')
    )
    op.create_table('loan_approvals',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('organisation', sa.UUID(), nullable=False),
    sa.Column('member', sa.UUID(), nullable=False),
    sa.Column('loan', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['loan'], ['loans.id'], ),
    sa.ForeignKeyConstraint(['member'], ['members.id'], ),
    sa.ForeignKeyConstraint(['organisation'], ['organisations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('loan_payments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('reference', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('organisation', sa.UUID(), nullable=False),
    sa.Column('member', sa.UUID(), nullable=False),
    sa.Column('loan', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['loan'], ['loans.id'], ),
    sa.ForeignKeyConstraint(['member'], ['members.id'], ),
    sa.ForeignKeyConstraint(['organisation'], ['organisations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('loan_payments')
    op.drop_table('loan_approvals')
    op.drop_table('member_socials')
    op.drop_table('loans')
    op.drop_table('levy_payments')
    op.drop_table('members')
    op.drop_table('organisational_roles')
    op.drop_table('organisational_levies')
    op.drop_table('organisational_accounts')
    op.drop_table('organisation_socials')
    op.drop_table('events')
    op.drop_table('organisations')
    # ### end Alembic commands ###
